# # Resolve react_native_pods.rb with node to allow for hoisting
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'


# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

# platform :ios, min_ios_version_supported
# prepare_react_native_project!

# linkage = ENV['USE_FRAMEWORKS']
# if linkage != nil
#   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#   use_frameworks! :linkage => linkage.to_sym
# end

# target 'fpnews' do
#   config = use_native_modules!

#   use_frameworks! :linkage => :static
#   $RNFirebaseAsStaticFramework = true

#   pod 'GoogleSignIn'
  
#   use_react_native!(
#     :path => config[:reactNativePath],
#     # An absolute path to your application root.
#     :app_path => "#{Pod::Config.instance.installation_root}/.."
#   )

#   $FirebaseSDKVersion = '10.5.0'
#   target 'fpnewsTests' do
#     inherit! :complete
#     # Pods for testing
#   end

# #   post_install do |installer|
# #     # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
# #     react_native_post_install(
# #       installer,
# #       config[:reactNativePath],
# #       :mac_catalyst_enabled => false,
# #       # :ccache_enabled => true
# #     )
# #   end
# # end
# post_install do |installer|
#   react_native_post_install(
#     installer,
#     config[:reactNativePath],
#     # Set `mac_catalyst_enabled` to `true` in order to apply patches
#     # necessary for Mac Catalyst builds
#     :mac_catalyst_enabled => false
#   )
#   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  
#   installer.pods_project.targets.each do |target|
#       target.build_configurations.each do |config|
#         config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
#       end
#     end
    
#     installer.pods_project.targets.each do |target|
#       target.build_configurations.each do |config|
#         config.build_settings["CC"] = "clang"
#         config.build_settings["LD"] = "clang"
#         config.build_settings["CXX"] = "clang++"
#         config.build_settings["LDPLUSPLUS"] = "clang++"
#       end
#     end
    
#     installer.aggregate_targets.each do |aggregate_target|
#       aggregate_target.user_project.native_targets.each do |target|
#         target.build_configurations.each do |config|
#           config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
#           config.build_settings['EXCLUDED_ARCHS'] = 'i386'
#         end
#       end
#       aggregate_target.user_project.save
#     end
#     installer.pods_project.targets.each do |target|
#       if (target.name.eql?('FBReactNativeSpec'))
#         target.build_phases.each do |build_phase|
#           if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
#             target.build_phases.move(build_phase, 0)
#           end
#         end
#       end
#     end
    
#     installer.pods_project.targets.each do |target|
#       target.build_configurations.each do |config|
#         config.build_settings["ENABLE_BITCODE"] = "NO"
#       end
#     end
#   end
# end





 # Resolve react_native_pods.rb with node to allow for hoisting
 require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

 require Pod::Executable.execute_command('node', ['-p',
   'require.resolve(
     "react-native/scripts/react_native_pods.rb",
     {paths: [process.argv[1]]},
   )', __dir__]).strip

#  platform :ios, '11.0'
 platform :ios, min_ios_version_supported
 prepare_react_native_project!

 linkage = ENV['USE_FRAMEWORKS']
 if linkage != nil
   Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
   use_frameworks! :linkage => linkage.to_sym
 end

 target 'fpnews' do
   config = use_native_modules!

   use_frameworks! :linkage => :static
   $RNFirebaseAsStaticFramework = true
   $RNFirebaseAnalyticsWithoutAdIdSupport=true

   pod 'GoogleSignIn'
  
   use_react_native!(
     :path => config[:reactNativePath],
     :app_path => "#{Pod::Config.instance.installation_root}/..",
     # :codegen_output_dir => "#{Pod::Config.instance.installation_root}/../build/generated/ios"
   )

   $FirebaseSDKVersion = '10.27.0'
   target 'fpnewsTests' do
     inherit! :complete
     # Pods for testing
   end

   post_install do |installer|
     react_native_post_install(
       installer,
       config[:reactNativePath],
       :mac_catalyst_enabled => false
     )
#     __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
     installer.pods_project.targets.each do |target|
       target.build_configurations.each do |config|
         config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
       end
     end
    
     installer.pods_project.targets.each do |target|
       target.build_configurations.each do |config|
         config.build_settings["CC"] = "clang"
         config.build_settings["LD"] = "clang"
         config.build_settings["CXX"] = "clang++"
         config.build_settings["LDPLUSPLUS"] = "clang++"
       end
     end
    
     installer.aggregate_targets.each do |aggregate_target|
       aggregate_target.user_project.native_targets.each do |target|
         target.build_configurations.each do |config|
           config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
           config.build_settings['EXCLUDED_ARCHS'] = 'i386'
         end
       end
       aggregate_target.user_project.save
     end
     installer.pods_project.targets.each do |target|
       if (target.name.eql?('FBReactNativeSpec'))
         target.build_phases.each do |build_phase|
           if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
             target.build_phases.move(build_phase, 0)
           end
         end
       end
     end
    
     installer.pods_project.targets.each do |target|
       target.build_configurations.each do |config|
         config.build_settings["ENABLE_BITCODE"] = "NO"
       end
     end
   end
 end





#
## Resolve react_native_pods.rb with node to allow for hoisting
#require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
#
#require Pod::Executable.execute_command('node', ['-p',
#  'require.resolve(
#    "react-native/scripts/react_native_pods.rb",
#    {paths: [process.argv[1]]},
#  )', __dir__]).strip
#
#platform :ios, '13.0' # Update this to a higher version if necessary
#prepare_react_native_project!
#
#linkage = ENV['USE_FRAMEWORKS']
#if linkage != nil
#  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#  use_frameworks! :linkage => linkage.to_sym
#end
#
#target 'fpnews' do
#  config = use_native_modules!
#
#  use_frameworks! :linkage => :static
#  $RNFirebaseAsStaticFramework = true
#  $RNFirebaseAnalyticsWithoutAdIdSupport=true
#
#  pod 'GoogleSignIn'
#  
#  use_react_native!(
#    :path => config[:reactNativePath],
#    :app_path => "#{Pod::Config.instance.installation_root}/.."
#  )
#
#  $FirebaseSDKVersion = '10.5.0'
#  target 'fpnewsTests' do
#    inherit! :complete
#    # Pods for testing
#  end
#
#  post_install do |installer|
#    react_native_post_install(
#      installer,
#      config[:reactNativePath],
#      :mac_catalyst_enabled => false
#    )
#    
#    # Define the missing method to avoid errors
#    def __apply_Xcode_12_5_M1_post_install_workaround(installer)
#      installer.pods_project.targets.each do |target|
#        target.build_configurations.each do |config|
#          config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
#          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
#        end
#      end
#    end
#
#    __apply_Xcode_12_5_M1_post_install_workaround(installer)
#    
#    installer.pods_project.targets.each do |target|
#      target.build_configurations.each do |config|
#        config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
#      end
#    end
#    
#    installer.pods_project.targets.each do |target|
#      target.build_configurations.each do |config|
#        config.build_settings["CC"] = "clang"
#        config.build_settings["LD"] = "clang"
#        config.build_settings["CXX"] = "clang++"
#        config.build_settings["LDPLUSPLUS"] = "clang++"
#      end
#    end
#    
#    installer.aggregate_targets.each do |aggregate_target|
#      aggregate_target.user_project.native_targets.each do |target|
#        target.build_configurations.each do |config|
#          config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
#          config.build_settings['EXCLUDED_ARCHS'] = 'i386'
#        end
#      end
#      aggregate_target.user_project.save
#    end
#    installer.pods_project.targets.each do |target|
#      if (target.name.eql?('FBReactNativeSpec'))
#        target.build_phases.each do |build_phase|
#          if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
#            target.build_phases.move(build_phase, 0)
#          end
#        end
#      end
#    end
#    
#    installer.pods_project.targets.each do |target|
#      target.build_configurations.each do |config|
#        config.build_settings["ENABLE_BITCODE"] = "NO"
#      end
#    end
#  end
#end
